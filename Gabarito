# 1) Escreva um programa que exiba "Hello world" na tela.
'''
print("Hello world!")
'''

# 2) Escreva um programa que leia o nome de alguém e exiba uma mensagem de boas vindas.
'''
nome = input("Digite o seu nome: ")
print(f"Boas  vindas, {nome}!")
'''

# 3) Escreva um programa que mostre a soma entre dois números.
'''
n1 = int(input("Insira o primeiro número: "))
n2 = int(input("Digite o segundo número: "))
print("A soma entre eles é {}" .format(n1+n2))
'''

# 4) Escreva um programa que leia algo, mostre a classe dele e exiba várias informações sobre sua natureza.

# algo = input("Digite algo: ")
# print(type(algo))
# print("É apenas um numero ?" ,algo.isnumeric())
# print("É apenas uma palavra ?" , algo.isalpha())
# print("Possui números ou letras ?" , algo.isalnum())
# print("Está apenas em letras maiúsculas ?" , algo.isupper())
# print("Está apenas em letras minúsculas ?" , algo.islower())
# print("Está só com a primeira letra maiúscula ?" , algo.istitle())


# 5) Escreva um programa que leia um número inteiro e mostre seu sucessor e seu antecessor.

# n = int(input("Digite um número inteiro: "))
# print("O antecessor dele é {} e o sucessor dele é {}" .format((n-1),(n+1)))


# 6) Escreva um programa que leia um número inteiro e mostre seu dobro, triplo e raiz quadrada.

# n = int(input("Digite um número inteiro: "))
# print("Seu dobro é {}, seu triplo é {} e sua raiz quadrada é {}." .format((n*2),(n*3),((n)**(1/2))))


# 7) Escreva um programa que lê duas notas de um aluno e calcule a média

# n1 = int(input("Digite a primeira nota: "))
# n2 = int(input("Digite a segunda nota: "))
# print("A média das notas é {}" .format((n1+n2)/2))


# 8) Escreva um programa que leia uma medida em metros e exiba o equivalente em centímetros e em milímetros

# m = int(input("Digite um valor em metros: "))
# print("Em centímetros será {} e em milímetros será {}." .format((m*100),(m*1000)))


# 9) Escrema um programa que leia um número inteiro qualquer e exiba sua tabuada.

# n = int(input("Digite um inteiro qualquer: "))
# print("{} x 1 é {}".format(n,(n*1)))
# print("{} x 2 é {}".format(n,(n*2)))
# print("{} x 3 é {}".format(n,(n*3)))
# print("{} x 4 é {}".format(n,(n*4)))
# print("{} x 5 é {}".format(n,(n*5)))
# print("{} x 6 é {}".format(n,(n*6)))
# print("{} x 7 é {}".format(n,(n*7)))
# print("{} x 8 é {}".format(n,(n*8)))
# print("{} x 9 é {}".format(n,(n*9)))
# print("{} x 10 é {}".format(n,(n*10)))


# 10) Escreva um programa que leia a quantia em dinheiro que uma pessoa tem e mostre quantos dólares ela pode obter.

# Obs: Considere o dólar US$1,00 = R$3,27
# d = float(input("Digite a quantia em dinheiro: "))
# print("Em dólar, poderia ser obtido R${:.2f}." .format(d/3.27))


# 11) Escreva um programa que leia a altura e a largura de uma parede em metros, calcule sua área e a quantidade de tinta necessária para pintá-la, sabendo que cada litro de tinta pinta 2 metros quadrados.                

# al = int(input("Informe a altura da parede: "))
# la = int(input("Informe a largura da parede: "))
# print("Seriam necessários {} litros de tinta" .format((al*la)/2))


# 12) Escreva um programa que leia o preço de um produto e mostre o novo preço, com 5% de desconto.

# p = float(input('Informe o preço do produto: '))
# print('Com desconto de 5%, o preço ficaria R${}.' .format((p-(p*(5/100)))))


# 13) Escreva um programa que leia o valor de um salário e informe o novo valor depois de 15% de aumento: 

# sal = float(input('Informe o valor do salário: '))
# print("Com 15% de aumento, ele ficaria R${:.2f}" .format(sal+ (sal*(15/100))))


# 14) Escreva um programa que converta de Celsius para Fahrenheit

#c = int(input("Digite uma temperatura em Celsius: "))
#f = (1.8*c + 32)
#print("Em Fahrenheit será {}F".format(f))


# 15) Crie um programa que pergunte a quantidade de km percorridos por um carro alugado e a quantidade de dias que ele foi alugado. Calcule o preço a ser pago, sabendo que o carro custa R$60

# km= float(input("Insira a quantidade de km rodados: "))
# d = int(input("Insira a quantidade de dias alugados: "))
# print("O aluguel foi R${}".format((0.15 * km) + (60 * d)))

# 16) Crie um programa que leia um número e rertorne a parte inteira dele

#import math
#n = float(input("Digite um número flutuante: "))
#print("A parte inteira é {}".format(math.floor(n)))


# 17) Crie um programa que leia o coprimento do cateto oposto e do cateto adjacente de um triângulo retângulo e mostre o comprimento da hipotenusa.

#from math import pow
#cato =  float(input("Digite o cateto oposto do triângulo: "))
#cata =  float(input("Digite o cateto adjacente do triângulo: "))
#hip = (pow(cato,2)+ (pow(cata,2)))
#print("A hipotenusa é {}" .format(pow(hip,(1/2))))


# 18) Crie um programa que leia um ângulo qualquer e exiba na tela seu seno, cosseno e tangente

#import math
#ang = int(input("Insira um ângulo: "))
#rad = math.radians(ang)
#print("O seno do ângulo é {:.2f}" .format(math.sin(rad)))
#print("O cosseno do ângulo é {:.2f}".format(math.cos(rad)))
#print('A tangente do ângulo é {:.2f}'.format(math.tan(rad)))


# 19) Crie um programa que leia o nome de 4 alunos e sorteie aleatoriamente um deles.

#import random
#n1 = input("Digite o nome do primeiro aluno: ")
#n2 = input("Digite o nome do segundo aluno: ")
#n3 = input("Digite o nome do terceiro aluno: ")
#n4 = input("Digite o nome do quarto aluno: ")
#lista = [n1,n2,n3,n4]
#esc = random.choice(lista)
#print('O escolhido foi {}'.format(esc))


# 20) Crie um programa que leia o nome de 4 alunos e sorteie aleatoriamente a ordem deles.

#import random
#n1 = input("Digite o nome do primeiro aluno: ")
#n2 = input("Digite o nome do segundo aluno: ")
#n3 = input("Digite o nome do terceiro aluno: ")
#n4 = input("Digite o nome do quarto aluno: ")
#lista = [n1,n2,n3,n4]
#random.shuffle(lista)
#print ('A ordem aleatória escolhida foi: {}'.format(lista))


# 21) Crie um programa que abra e reproduza o áudio de um arquivo mp3

#import playsound
#playsound('https://www.youtube.com/watch?v=dQw4w9WgXcQ1')
#print('playing sound using  playsound') 


# 22) Crie um programa que leia o nome completo de uma pessoa e:
# - O nome com tudo maiúsculo;
# - O nome todo minúsculo;
# - A quantidade de letras do nome (sem contar os espaços);
# - Quantas letras tem o primeiro nome

# nome = str(input("Ditite o nome completo: ")).strip()
# print('O nome com todas as letras maiúsculas é: {}' .format(nome.upper()))
# print('O nome com todas as letras minúsculas é: {}' .format(nome.lower()))
# nomesemespaco = nome.replace(" ","")
# print('A quantidade de letras do nome é: {}'.format(len(nomesemespaco)))
# nomesseparados = nome.split()
# print('O primeiro nome tem {} letras'.format(len(nomesseparados[0])))

#Obs: Para analisar a quantidade de letras do nome, você poderia utilizar : print('O primeiro nome tem {} letras'.format(len(nome) - nome.count(" ")))
#Obs2: Para analisar a quantidade de letras do primeiro nome, você poderia utilizar: print('O primeiro nome tem {} letras'.format(nome.find(' ')))


# 23) Crie um programa que leia um número de 0 até 9999 e mostre na tela cada um dos dígitos separados.

# num = int(input('Digite um número: '))
# u = num // 1 % 10
# d = num // 10 % 10
# c = num // 100 % 10
# m = num // 1000 % 10
# print('A unidade é {}'.format(u))
# rint('A dezena é {}'.format(d))
# print('A centena é {}'.format(c))
# print('O milhar é {}'.format(m))


# 24) Crie um programa que leia o nome de uma cidade e verifique se ela começa com 'Santo'

#cidade = str(input('Insira o nome da cidade: ')).strip()
#print(cidade[:5].upper() == 'SANTO')


# 25) Crie um programa que leia o nome de uma pessoa e exiba se esse nome possui 'Silva'

#nome = str(input('Insira um nome completo: ')).strip().upper()
#print('SILVA' in nome)


# 26) Crie um programa que leia uma frase e exiba:
# - Quantas letras 'a' tem nela;
# - Em que posição 'a' aparece pela primeira vez;
# - Em que posição 'a' aparece pela última vez;

#frase = str(input('Digite uma frase: ')).lower()
#print('A letra "a" aparece {} vezes.' .format(frase.count('a'))) 
#print('A primeira letra "a" aparece na posição {}'.format(frase.find('a')+1)) 
#print('A última letra "a" aparece na posição {}'.format(frase.rfind('a')+1))


# 27) Faça um programa que leia o nome completo de uma pessoa e exiba o primneiro e o último.

#nome = str(input("Digite um nome completo: ")).strip()
#listanome = nome.split()
#tamanho = len(listanome) - 1
#print('O primeiro nome é: {}'.format(listanome[0]))
#print('O último nome é: {}'.format((listanome[tamanho])))


# 28) Faça um programa que faça o computador pensar em um inteiro aleatório entre 0 e 5 e o usuário, ao tentar adivinhar, receba a informação se errou ou acertou.
'''
import random

n = int(input('Digite o número entre 0 e 5 que acha que pensei: '))
nal = random.randint(0,5)
print('O número que você digitou foi {} e o que eu pensei foi {}'.format(n,nal))

if n == nal:
    print('\033[32mParabéns! Você acertou!\033[m')
else:
    print('\033[31mErrou, OTÁRIO!\033[m')    '''

# 29) Faça um programa que leia a velocidade de um carro, e se ela ultrpassar 80 km/h, mostre uma mensagem dizendo que ele foi multado. A multa será de R$7,00 por km excedido.

'''vel = int(input('Digite a velocidade do carro: '))
multa = (vel-80) * 7
if vel <= 80:
    print('\033[32mVelocidade normal!\033[m')
else:
   print('\033[31mVocê excedeu o limite de velocidade! Sua multa será de \033[40mR${},00\033[m'.format(multa))   ''' 


# 30) Faça um programa que leia um número inteiro e mostre se ele é par ou ímpar

#n = int(input('Digite um número: '))
#if (n % 2) == 0:
#   print('O número é par! ')
#else:
#     print('O número é ímpar! ')    
     

# 31) Desenvolva um programa que pergunte a distância de uma viagem em Km. Calcule o preço da passagem, cobrando R$0,50 por Km para viagens de até 200Km e R$0,45 para viagens mais longas.
'''d = int(input('Digite a distância da viagem (em km): '))
if (d<200): 
 print('A viagem custará \033[32mR${:.2f}'.format(0.5*d))
else:
 print('A viagem custará \033[32mR${:.2f}'.format(0.45*d)) '''


# 32) Faça um programa que leia um ano qualquer e mostre se ele é bissexto.
''' ano = int(input('Digite o ano: '))
if ano % 4 == 0 and ano % 100 != 0 or ano % 400 == 0:
    print('O ano é bissexto.')
else:
    print('O ano não é bissexto.')  '''  


# 33) Faça um programa que leia três números e mostre qual é o maior e qual é o menor.
'''n1 = int(input('Digite o primeiro número: '))
n2 = int(input('Digite o segundo número: '))
n3 = int(input('Digite o terceiro número: '))

def  maior(x,y,z):
    if x > y and x > z:
     print('{}{} é o maior número.'.format('\033[32m',x))
    if y > x and y > z:
     print('{}{} é o maior número.'.format('\033[32m',y))
    if z > x and z > y:
     print('{}{} é o maior número.'.format('\033[32m',z))  

def  menor(x,y,z):
    if x < y and x < z:
     print('{}{} é o menor número.'.format('\033[31m',x))
    if y < x and y < z:
     print('{}{} é o menor número.'.format('\033[31m',y))
    if z < x and z < y:
     print('{}{} é o menor número.'.format('\033[31m',z) )  



maior(n1,n2,n3)      
menor(n1,n2,n3)  '''


# 34) Escreva um programa que pergunte o salário de um funcionário e calcule o valor do seu aumento. Para salários superiores a R$1250,00, calcule um aumento de 10%. Para os inferiores ou iguais, o aumento é de 15%.
'''sal = float(input('Digite o salário: '))
if sal > 1250:
    print('O aumento será de \033[32m{}%\033[m e o novo valor será \033[32mR${}.'.format(10,sal + (sal/10)))
else:
    print('O aumento será de {}% e o novo valor será R${}.'.format(15, sal + (sal * 0.15)))   
'''

# 35) Desenvolva um programa que leia o comprimento de três retas e diga ao usuário se elas podem ou não formar um triângulo.
''' ret1 = float(input('Digite o comprimento do primeiro segmento de reta: '))
ret2 = float(input('Digite o comprimento do segundo segmento de reta: '))
ret3 = float(input('Digite o comprimento do terceiro segmento de reta: '))
  
if ret1 + ret2 > ret3 and ret2 + ret3 > ret1 and ret1 + ret3 > ret2:
    print('\033[32mOs segmentos PODEM formar um triângulo!\033[m')
else:
    print('\033[31mOs segmentos NÃO PODEM formar um triângulo!\033[m') ''' 
     

# 36) Escreva um programa para aprovar o empréstimo bancário para a compra de uma casa. Pergunte o valor da casa, o salário do comprador e em quantos anos ele vai pagar. A prestação mensal não pode exceder 30% do salário ou então o empréstimo será negado.
'''preçocasa = float(input('Digite o valor da casa: '))
sal = float(input('Qual é seu salário ?'))
anos = int(input('Em quantos anos vai pagar ?'))

meses = anos * 12

if (preçocasa/meses) <= (sal * 0.3):
    print('Para comprar uma casa de {} em {} anos, a prestação será de R${.:2f}. \033[32mEmprésimo APROVADO\033[m'.format(preçocasa,anos,preçocasa/meses))
else:
    print('Para comprar uma casa de {} em {} anos, a prestação será de R${.:2f}. \033[31mEmpréstimo RECUSADO\033[m'.format(preçocasa,anos,preçocasa/meses))    '''


# 37) Escreva um programa em Python que leia um número inteiro qualquer e peça para o usuário escolher qual será a base de conversão: 1 para binário, 2 para octal e 3 para hexadecimal.
'''n = int(input('Insira o número: '))

conv = int(input('Digite 1 para converter para binário, 2 para octal e 3 para hexadecimal: '))
if conv == 1:
    print('{} convertido para binário é {}.'.format(n,bin(n)[2:]))
elif conv == 2 :
    print('{} convertido para octal é {}.'.format(n,oct(n)[2:]))
elif conv == 3:
    print('{} convertido para hexadecimal é {}.'.format(n,hex(n)[2:])) 
else:
    print('\033[31mERRO! Execute o programa novamente, inserindo um dos valores pedidos.\033[m')     '''


#  38) Escreva um programa que leia dois números inteiros e compare-os. mostrando na tela uma mensagem:

'''– O primeiro valor é maior

– O segundo valor é maior

– Não existe valor maior, os dois são iguais '''

'''n1 = int(input('Digite o primeiro número: '))
n2 = int(input('Digite o segundo número: '))
if n1 > n2:
    print('O primeiro valor é maior.')
elif n1 < n2:
    print('O segundo valor é maior.')
else:
    print('Não existe valor maior, os dois são iguais')   ''' 


# 39) Faça um programa que leia o ano de nascimento de um jovem e informe, de acordo com a sua idade, se ele ainda vai se alistar ao serviço militar, se é a hora exata de se alistar ou se já passou do tempo do alistamento. Seu programa também deverá mostrar o tempo que falta ou que passou do prazo.
'''ano = int(input('Insira seu ano de nascimento: '))
idade = 2023 - ano
if idade < 18:
    print('Falta(m) {} ano(s) para seu alistamento.'.format(18-idade))
elif idade == 18:
    print('\033[1;34;42mÉ HORA DE SE ALISTAR!\033[m')
else:
    print('Já passou(aram) {} ano(s) da hora de se alistar!'.format(idade - 18))  '''      


# 40) Crie um programa que leia duas notas de um aluno e calcule sua média, mostrando uma mensagem no final, de acordo com a média atingida:

''' – Média abaixo de 5.0: REPROVADO

– Média entre 5.0 e 6.9: RECUPERAÇÃO

– Média 7.0 ou superior: APROVADO '''


'''n1 = float(input('Insira a primeira nota: '))
n2 = float(input('Insira a segunda nota: '))

media = (n1+n2)/2

if media < 5:
    print('\033[31mREPROVADO\033[m')
elif media >= 5 and media < 6.9:
    print('RECUPERAÇÃO')  
else:
    print('\033[32mAPROVADO\033[m')    ''' 


# 41) A Confederação Nacional de Natação precisa de um programa que leia o ano de nascimento de um atleta e mostre sua categoria, de acordo com a idade:

''' – Até 9 anos: MIRIM

– Até 14 anos: INFANTIL

– Até 19 anos: JÚNIOR

– Até 25 anos: SÊNIOR

– Acima de 25 anos: MASTER'''

'''ano = int(input('Digite o ano de nascimento do atleta: '))
idade = 2023- ano
print('O atleta tem {} anos.'.format(idade))

if idade <= 9:
  print('Classificação: MIRIM')
elif idade > 9 and idade <= 14:
  print('Classificação: INFANTIL') 
elif idade > 14 and idade <= 19:
  print('Classificação: JÚNIOR') 
elif idade > 19 and idade <= 25:
  print('Classificação: SÊNIOR') 
elif idade > 25:
  print('Classificação: MASTER') '''


# 42) Refaça o DESAFIO 35 dos triângulos, acrescentando o recurso de mostrar que tipo de triângulo será formado:

'''– EQUILÁTERO: todos os lados iguais

– ISÓSCELES: dois lados iguais, um diferente

– ESCALENO: todos os lados diferentes'''

'''ret1 = float(input('Digite o comprimento do primeiro segmento de reta: '))
ret2 = float(input('Digite o comprimento do segundo segmento de reta: '))
ret3 = float(input('Digite o comprimento do terceiro segmento de reta: '))
  
if ret1 + ret2 > ret3 and ret2 + ret3 > ret1 and ret1 + ret3 > ret2:
    print('\033[32mOs segmentos PODEM formar um triângulo!\033[m')
    if ret1 == ret2 == ret3:
     print('O triângulo será equilátero.')
    elif ret1 != ret2 != ret3 != ret1:
     print('O triângulo será escaleno.')
    else:
     print('O triângulo será isóceles.')     

else:
    print('\033[31mOs segmentos NÃO PODEM formar um triângulo!\033[m')'''


# 43) Desenvolva uma lógica que leia o peso e a altura de uma pessoa, calcule seu Índice de Massa Corporal (IMC) e mostre seu status, de acordo com a tabela abaixo:

'''– IMC abaixo de 18,5: Abaixo do Peso

– Entre 18,5 e 25: Peso Ideal

– 25 até 30: Sobrepeso

– 30 até 40: Obesidade

– Acima de 40: Obesidade Mórbida'''

'''peso = float(input('Insira aqui seu peso: '))
altura = float(input('Insira aqui sua altura em metros: '))
imc = peso/(altura**2)
print('Seu IMC é {:.2f}'.format(imc))

if imc <= 18.5:
    print('Classificação: Abaixo do Peso.')
elif imc > 18.5 and imc <=25:
    print('Classificação: Peso ideal.') 
elif imc > 25 and imc <= 30:
    print('Classificação: Sobrepeso.')   
elif  imc > 30 and imc <=40:
    print('Classificação: Obesidade.') 
else:          
    print('Classificação: Obesidade mórbida.')   '''


# 44) Exercício Python 44: Elabore um programa que calcule o valor a ser pago por um produto, considerando o seu preço normal e condição de pagamento:

'''– à vista dinheiro/cheque: 10% de desconto

– à vista no cartão: 5% de desconto

– em até 2x no cartão: preço normal 

– 3x ou mais no cartão: 20% de juros'''

'''preço = float(input('Insira o valor das compras: '))
print('''#FORMAS DE PAGAMENTO:
#      [1] À vista dinheiro/cheque 
#      [2] À vista no cartão
#      [3] Em até 2x no cartão
 #     [4] 3x ou mais no cartão      
''')
meio = int(input('Insira qual dos meios será utilizado: '))

if meio == 1:
    print('O valor total será R${:.2f}'.format(preço * 0.9))
elif meio == 2:
    print('O valor total será R${:.2f}'.format(preço * 0.95))  
elif meio == 3:
    print('O valor total será R${:.2f} com 2 parcelas de R${}'.format(preço,(preço/2)))
elif meio == 4:
    totalparc = int(input('Quantas parcelas ?'))
    print('O valor total será R${:.2f} percelado para {}x de {}'.format((preço)+ (preço*0.2),totalparc,(((preço)+ (preço*0.2))/totalparc)))
else :
    print('\033[31mNÚMERO INVÁLIDO. TENTE NOVAMENTE!\033[m')'''


# 45) Crie um programa que faça o computador jogar Jokenpô com você.
'''
import random
from time import sleep

lista = ['pedra','papel','tesoura']
print(
     'ESCOLHA SUA JOGADA:\n'
     '[0] PEDRA\n'
     '[1] PAPEL\n'
     '[2] TESOURA \n'
)

jogadamy = int(input('JOGADA : '))
print('JO')
sleep(1)
print('KEN')
sleep(1)
print('PÔ!!!')
jogadapc = random.choice(lista)  

if jogadamy == 0:
    if jogadapc == 'pedra':
     print('O computador escolheu {}. EMPATE'.format(jogadapc))
    elif jogadapc == 'papel':
     print('O computador escolheu {}. \033[31mDERROTA!\033[m'.format(jogadapc))
    elif jogadapc == 'tesoura':
     print('O computador escolheu {}. \033[32mVITÓRIA!\033[m'.format(jogadapc))

elif jogadamy == 1:
    if jogadapc == 'pedra':
     print('O computador escolheu {}.\033[32mVITÓRIA!\033[m '.format(jogadapc))
    elif jogadapc == 'papel':
     print('O computador escolheu {}. EMPATE'.format(jogadapc))
    elif jogadapc == 'tesoura':
     print('O computador escolheu {}. \033[31mDERROTA!\033[m'.format(jogadapc))

elif jogadamy == 2:
    if jogadapc == 'pedra':
     print('O computador escolheu {}. \033[31mDERROTA!\033[m'.format(jogadapc))
    elif jogadapc == 'papel':
     print('O computador escolheu {}.\033[32mVITÓRIA!\033[m'.format(jogadapc))
    elif jogadapc == 'tesoura':
     print('O computador escolheu {}. EMPATE'.format(jogadapc))

else:
  print('\033[31mERRO! INSIRA UM NÚMERO VÁLIDO!\033[m')
'''


# 46) Faça um programa que mostre na tela uma contagem regressiva para o estouro de fogos de artifício, indo de 10 até 0, com uma pausa de 1 segundo entre eles.
'''from time import sleep

for c in range (10,-1,-1):
    print (c)
    sleep(1)
print('BOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOMMMMMM')'''



# 47) Crie um programa que mostre na tela todos os números pares que estão no intervalo entre 1 e 50.
'''for c in range (0,51,2):
 print(c)'''



# 48) Faça um programa que calcule a soma entre todos os números ímpares que são múltiplos de três e que se encontram no intervalo de 1 até 500. 
'''soma = 0
for n in range (1,500,2):
    if n % 3 == 0:
      soma = soma + n
print(soma)'''



# 49) Refaça o DESAFIO 9, mostrando a tabuada de um número que o usuário escolher, só que agora utilizando um laço for.
'''n = int(input('Insira o número cuja tabuada será exibida: '))
    
for c in range (1,11):
    print('{} x {} = {}'.format(n,c,n*c))'''



# 50) Desenvolva um programa que leia seis números inteiros e mostre a soma apenas daqueles que forem pares. Se o valor digitado for ímpar, desconsidere-o.



'''soma = 0
for c in range(1,7):
    n = int(input(('Insira um número: ')))
    if n % 2 == 0:
      soma = soma + n

print('A soma dos números pares é {}'.format(soma))'''



# 51) Desenvolva um programa que leia o primeiro termo e a razão de uma PA. No final, mostre os 10 primeiros termos dessa progressão.

'''primeiro = int(input('Insira o primeiro termo da PA: '))
razao = int(input('Insira a razão da PA: '))

print('Os 10 primeiros termos da PA são: ')
for c in range (primeiro,(primeiro + razao*10),razao):
    
    print(c, end = ' ')'''



# 52) Faça um programa que leia um número inteiro e diga se ele é ou não um número primo.
'''n = int(input('Digite um número: '))
tot = 0

print('VERIFICADOR DE DIVISÃO:')
for c in range (n,0,-1):
     if n % c == 0:
      tot = tot + 1
      print('\033[32m', end = ' ')
     else:
      print('\033[31m', end = ' ')
     print(c)


if tot == 2:
   print('\033[32mO número é primo.\033[32m')
else:
   print('\033[31mO número não é primo.\033[31m')      '''



# 53) Crie um programa que leia uma frase e confira se ela é um palíndromo.
'''print('\033[40mVERIFICADOR DE PALÍNDROMOS\033[m')
frase = str(input('Digite a frase: '))
frasesemespaco = frase.replace(' ', '')
listafrase = list(frasesemespaco)
listafraseinvertida = listafrase[::-1]

if listafrase == listafraseinvertida:
    print('\033[32mÉ UM PALÍNDROMO!\033[m')
else:
    print('\033[31mNÃO É UM PALÍNDROMO!\033[m') '''



# 54) Crie um programa que leia o ano de nascimento de sete pessoas. No final, mostre quantas pessoas ainda não atingiram a maioridade e quantas já são maiores.

'''anoatual = 2023
countM = 0
countm = 0
for c in range(0,7,1):
    ano = int(input('Insira o ano de nascimento: '))
    if anoatual - ano >= 18:
        countM = countM + 1
    else:
        countm = countm + 1

print(f"{countM} pessoas é/são maior(es) de idade e {countm} é/são menor(es).")'''



# 55) Faça um programa que leia o peso de cinco pessoas. No final, mostre qual foi o maior e o menor peso lidos.
'''
maior = 0
menor = 0
for p in range(1,6):
    peso = float(input('Digite o peso (em Kg): '))
    if p == 1:
        maior = peso
        menor = peso
    else:
        if peso > maior:
            maior = peso
        if peso < menor:
            menor = peso
print(f"O maior peso lido foi {maior}Kg e o menor foi {menor}Kg.")   '''



# 56) Desenvolva um programa que leia o nome, idade e sexo de 4 pessoas. No final do programa, mostre: a média de idade do grupo, qual é o nome do homem mais velho e quantas mulheres têm menos de 20 anos
'''
soma_idade = 0
maior = 0
contador20 = 0
homem_veio = ''


def linha():
    print('-'*10)


for c in range(1,5):
    linha()   
    print(f"{'PESSOA'} {c}:")
    linha()
    
    nome = str(input('Insira o nome: '))
   
    idade = int(input('Digite a idade: '))
    soma_idade = soma_idade + idade
  
    sexo = str(input('Insira o sexo (M/F): ')).strip().upper()
    print('-'* 20)
    if c == 1 and sexo == 'M':
      if idade > maior:
        maior = idade 
        homem_veio = nome
    if sexo == 'M' and idade > maior:  
        maior = idade
        homem_veio = nome
    elif sexo == 'F':
     if idade < 20:
        contador20 = contador20 + 1  
       

media_idade = soma_idade/4
print('A média das idades é {}'.format(media_idade))
print('O homem mais velho é {} e tem {} anos '.format(homem_veio,maior))
print('O número de mulheres com menos de 20 anos é {}'.format(contador20))'''



# 57) Faça um programa que leia o sexo de uma pessoa, mas só aceite os valores ‘M’ ou ‘F’. Caso esteja errado, peça a digitação novamente até ter um valor correto.
'''
sexo = ''
while sexo != 'M' and sexo!='F':
   sexo = str(input('Insira o sexo (M/F): ')).strip().upper()[0]
   if sexo != 'M' and 'F':
      print('Por favor, digite um sexo válido!')
      
print('\033[32mACEITO!\033[m')'''



# 58) Melhore o jogo do DESAFIO 28 onde o computador vai “pensar” em um número entre 0 e 10. Só que agora o jogador vai tentar adivinhar até acertar, mostrando no final quantos palpites foram necessários para vencer.
'''
import random

n = 1
nal = random.randint(0,10)
c = 0
while n != nal:
    n = int(input('Insira o número que acha que pensei: ')) 
    print('\033[31mDERROTA! TENTE DE NOVO!\033[m')
    c = c + 1
print('\033[32mPARABÉNS, ACERTOU!\033[m'.format(c))
print(f"Tentativas necessárias: {c}")  '''



# 59) Crie um programa que leia dois valores e mostre um menu na tela:
'''
[ 1 ] somar

[ 2 ] multiplicar

[ 3 ] maior

[ 4 ] novos números

[ 5 ] sair do programa

Seu programa deverá realizar a operação solicitada em cada caso. '''
'''
def lin():
    print('-'*30)


n1 = int(input('Informe um valor: '))
n2 = int(input('Informe outro valor: '))
op = 6 # Número aleatório apenas para não dar erro no programa.

while op != 5:
    lin()
    print(' [1] SOMAR')
    print(' [2] MULTIPLICAR')
    print(' [3] MAIOR')
    print(' [4] NOVOS NÚMEROS')
    print(' [5] SAIR DO PROGRAMA')
    lin()
    op = int(input('Digite a operação desejada: '))

    if op == 1:
        print('\033[7mA soma dos valores é {}\033[m'.format(n1 + n2))
    
    if op == 2:
        print('\033[7mA multiplicação dos valores é {}\033[m'.format(n1*n2))
           
    if op == 3:
        if n1 < n2:
            print('\033[7mO maior valor é {}\033[m'.format(n2))
        else:
            print('\033[7mO maior valor é {}\033[m'.format(n1))  

    if op == 4:
        n1 = int(input('Digite um valor: '))
        n2 = int(input('Digite outro valor: '))  

print('\033[32mPROGRAMA FINALIZADO COM SUCESSO!\033[m')          '''



# 60) Faça um programa que leia um número qualquer e mostre o seu fatorial.
'''
n = int(input('Digite um número: '))
c = n
f = 1
while c > 0:
    f = f * c
    c = c - 1
print(f"{n}! = {f}")  '''



# 61) Refaça o DESAFIO 51, lendo o primeiro termo e a razão de uma PA, mostrando os 10 primeiros termos da progressão usando a estrutura while.
'''
p = int(input('Insira o primeiro termo da PA: '))
r = int(input('Insira a razão da PA: '))

cont = 1
print('Os 10 primeiros termos são: ')
while cont <= 10:
    print(p)  
    cont = cont + 1
    p = p +r                '''



# 62) Melhore o DESAFIO 61, perguntando para o usuário se ele quer mostrar mais alguns termos. O programa encerrará quando ele disser que quer mostrar 0 termos.
'''
p = int(input('Insira o primeiro termo da PA: '))
r = int(input('Insira a razão da PA: '))
mais = 10
total = 0
cont = 1

print('Os 10 primeiros termos são:')
while mais != 0:
    total = total + mais
    while cont <= total:
        print(p)
        cont += 1
        p = p + r

    mais = int(input('Quantos termos deseja ver a mais ? '))    
print('FIM')  '''



# 63) Escreva um programa que leia um número N inteiro qualquer e mostre na tela os N primeiros elementos de uma Sequência de Fibonacci.
'''
n = int(input('Digite quantos termos de fibonacci deseja visualizar: '))

fibo1 = 0
fibo2 = 1

if n == 1:
    print(fibo1)
if n == 2:
    print(fibo1,fibo2)
else:
    cont = 3   
    fibo3 = fibo1 + fibo2
    while cont <= n+2:
        print(fibo3)
        fibo3 = fibo1 + fibo2
        fibo1 = fibo2
        fibo2 = fibo3
        cont += 1 '''



# 64) Crie um programa que leia vários números inteiros pelo teclado. O programa só vai parar quando o usuário digitar o valor 999, que é a condição de parada. No final, mostre quantos números foram digitados e qual foi a soma entre eles (desconsiderando o flag).
'''
s = 0
n=0 
cont = 0       
while n != 999:
    n = int(input('Insira valores a vontade(999 para parar.): '))
    if n !=999:
        s += n
        cont += 1
print('Foram exibidos {} números.'.format(cont))
print('A soma dos números é',s)'''



# 65) Crie um programa que leia vários números inteiros pelo teclado. No final da execução, mostre a média entre todos os valores e qual foi o maior e o menor valores lidos. O programa deve perguntar ao usuário se ele quer ou não continuar a digitar valores.
''' 
parar = "n".upper().strip()   
resp = ''
cont = 0
soma = 0

maiorvalor = 0
menorvalor = 0
while resp != parar:
    n = int(input('Digite um número: '))
    resp = str(input('Quer continuar ? (S/N) ')).strip().upper()
    cont += 1
    soma += n
    
    if cont == 1:
       maiorvalor = menorvalor = n
    else:  
        if n > maiorvalor:
           maiorvalor = n
        if n < menorvalor:
           menorvalor = n

print('A média de todos os valores foi {}'.format(soma/cont))
print('O maior valor lido foi {}.'.format(maiorvalor))
print('O menor valor lido foi {}.'.format(menorvalor))     '''



# 66) Crie um programa que leia números inteiros pelo teclado. O programa só vai parar quando o usuário digitar o valor 999, que é a condição de parada. No final, mostre quantos números foram digitados e qual foi a soma entre elas (desconsiderando o flag).
'''
cont = 0
soma = 0
while True:
    n = int(input('Digite um número (999 para parar): '))
    if n == 999:
        break
    cont +=1
    soma+= n 
print(f'Foram digitados {cont} números e a soma deles é {soma}')
'''



# 67) Faça um programa que mostre a tabuada de vários números, um de cada vez, para cada valor digitado pelo usuário. O programa será interrompido quando o número solicitado for negativo.
'''
while True: 
    n = int(input('Insira o número cuja tabuada quer visualizar (número negativo para parar): '))
    if n < 0:
        break
    print('-'*30)
    for c in range (1,11):
        print(f'{n} x {c} = {n*c}')
    print('-'*30)    
print('\033[32mPROGRAMA FINALIZADO COM SUCESSO!\033[m')
'''



# 68) Faça um programa que jogue par ou ímpar com o computador. O jogo só será interrompido quando o jogador perder, mostrando o total de vitórias consecutivas que ele conquistou no final do jogo.
'''
import random

cont = 0
print('\033[7mJOGO DO PAR OU ÍMPAR\033[m')
while True:
    jogada = int(input('Digite a sua jogada: '))
    parouimpar = str(input('Par ou ímpar (P/I): ')).strip().upper()[0]
    comp = random.randint(0,10)

    if (jogada + comp)%2 == 0 and parouimpar == 'P':
        print(f'Você jogou {jogada} e eu joguei {comp}.')
        print('\033[32mVOCÊ VENCEU! VAMOS JOGAR DE NOVO!\033[m')
    
    if (jogada + comp)%2 !=0 and parouimpar == 'I':
        print(F'Você jogou {jogada} e eu joguei {comp}.')
        print('\033[32mVOCÊ VENCEU! VAMOS JOGAR DE NOVO!\033[32m')



    if (jogada + comp) % 2 == 0 and parouimpar == 'I':
        print(f'Você jogou {jogada} e eu joguei {comp}.')
        break

    if (jogada + comp) % 2 != 0 and parouimpar == 'P':
        print(f'Você jogou {jogada} e eu joguei {comp}.') 
        break   
     
    cont +=1

print(f'\033[32mForam vencidas {cont} partidas!\033[m')
'''



# 69) Crie um programa que leia a idade e o sexo de várias pessoas. A cada pessoa cadastrada, o programa deverá perguntar se o usuário quer ou não continuar. No final, mostre:
'''
def lin():
    print('-'*30)

maiores = homens= mulhermenosde20 = 0

while True:
        lin()
        idade = int(input('Digite a idade da pessoa: '))         
        sexo = ' '
        while sexo not in 'MF':
           sexo = str(input('Insira o sexo da pessoa (M/F): ')).strip().upper()[0]
          
       
        continuar = ' '
        while continuar not in 'SN':
         continuar = str(input('Deseja continuar ? (S/N) ')).strip().upper()[0]
         lin()
         
        
        if idade > 18:
                maiores+=1
            
            
        if sexo == 'M':
                homens += 1

        if idade < 20 and sexo == 'F':
                mulhermenosde20 += 1
            
        if continuar == 'N':
                break   

print(F'{maiores} pessoas é/são de maior.') 
print(f'{homens} pessoas é/são homens.')
print(f'{mulhermenosde20} mulheres tem menos de 20 anos.')   
'''



# 70) Crie um programa que leia o nome e o preço de vários produtos. O programa deverá perguntar se o usuário vai continuar ou não. No final, mostre:

#A) qual é o total gasto na compra.

#B) quantos produtos custam mais de R$1000.

#C) qual é o nome do produto mais barato.
'''
def lin():
    print ('-'*30)



print('\033[43;32mLOJAS PAULO GATÃO\033[m')
lin()

total = prod1000 = cont = preçomaisbaixo = 0
while True:
    lin()
    produto = str(input('Digite o nome do produto: '))
    preço = float(input('Digite o preço do produto: R$'))
    lin() 

    resp = ' '
    while resp not in 'SN':
        resp = str(input('Quer continuar (S/N)?')).strip().upper()[0]
        lin()

    total += preço
     
    cont += 1

    if preço > 1000:
        prod1000 += 1

    if cont == 1:
        produtobarato = produto
        preçomaisbaixo = preço
    else:
        if preço < preçomaisbaixo:
            preçomaisbaixo = preço
            produtobarato = produto
 



    if resp == 'N':
        break

      
print('\033[32mCOMPRA CONCLUÍDA!\033[m')
print(f'Total das compras: R${total:.2f}')
print(f'Produtos de mais de R$1000,00: {prod1000}')
print(f'O produto mais barato custou R${preçomaisbaixo} e foi: {produtobarato}.')
'''



#71) Crie um programa que simule o funcionamento de um caixa eletrônico. No início, pergunte ao usuário qual será o valor a ser sacado (número inteiro) e o programa vai informar quantas cédulas de cada valor serão entregues. OBS:

#considere que o caixa possui cédulas de R$50, R$20, R$10 e R$1.
'''
print('\033[32;43mBANCO PAULO GATO\033[m')
valor = int(input('Valor a sacar: R$'))


ced50 = ced20 = ced10 = ced1 = 0
while True:
    if valor >= 50:
        while valor >= 50:
            valor -= 50
            ced50 +=1

    if valor >= 20:
        while valor >= 20:
            valor -=20
            ced20 +=1

    if valor >= 10:
        while valor >= 10:
            valor -= 10
            ced10 += 1

    if valor >= 1:
        while valor >= 1:
            valor -= 1
            ced1 +=1

    if valor == 0:
        break

print(f'Cédulas de R$50 sacadas: {ced50}')  
print(f'Células de R$20 sacadas: {ced20}') 
print(f'Células de R$10 sacadas: {ced10}')
print(f'Cédulas de R$1 sacadas: {ced1}') 
'''



# 72) Crie um programa que tenha uma dupla totalmente preenchida com uma contagem por extenso, de zero até vinte. Seu programa deverá ler um número pelo teclado (entre 0 e 20) e mostrá-lo por extenso.
'''
numeros = ('zero','um','dois','três','quatro','cinco','seis','sete','oito','nove','dez','onze','doze','treze','quatorze','quinze','dezesseis','dezessete','dezoito','dezenove','vinte')

while True:
    n = int(input('Insira um número entre 0 e 20: '))
    if n < 0 or n > 20:
        print('\033[31mNÚMERO INVÁLIDO!\033[m')     
    else:
        break


print(F'O número digitado foi {numeros[n]}')
'''



# 73) Crie uma tupla preenchida com os 20 primeiros colocados da Tabela do Campeonato Brasileiro de Futebol, na ordem de colocação. Depois mostre:

# a) Os 5 primeiros times.

# b) Os últimos 4 colocados.

# c) Times em ordem alfabética.

# d) Em que posição está o time do Flamengo.
'''
campeonatobrasileiro = ('Botafogo','Palmeiras','Flamengo','Fluminense','Grêmio','Athletico-PR','Bragantino','Fortaleza','Cuiabá','São Paulo','Atlético-MG','Cruzeiro','Corinthias','Internacional','Goiás','Bahia','Santos','Vasco da Gama','Coritiba','América-MG')
print(f'Os cinco primeiro colocados são: {campeonatobrasileiro[0:5]}')
print(f'Os últimos 4 colocados são: {campeonatobrasileiro[-4:]}')
print(f'Os times em ordem alfabética são: {sorted(campeonatobrasileiro)}')

indicemengao = campeonatobrasileiro.index('Flamengo')
print(f'Flamengo está na posição: {indicemengao + 1}')
'''



# 74) Crie um programa que vai gerar cinco números aleatórios e colocar em uma tupla. Depois disso, mostre a listagem de números gerados e também indique o menor e o maior valor que estão na tupla.
'''
import random


numeros = (random.randint(0,10),random.randint(0,10),random.randint(0,10),random.randint(0,10),random.randint(0,10))
print(f'Os números foram: {numeros}')
print(f'O maior valor foi {max(numeros)} e o menor foi {min(numeros)} ')          
'''



# 75) Desenvolva um programa que leia quatro valores pelo teclado e guarde-os em uma tupla. No final, mostre:

# A) Quantas vezes apareceu o valor 9.

# B) Em que posição foi digitado o primeiro valor 3.

# C) Quais foram os números pares.


'''
n1 = int(input('Digite um número: '))
n2 = int(input('Digite um número: '))
n3 = int(input('Digite um número: '))
n4 = int(input('Digite um número: '))

numeros = (n1,n2,n3,n4)

print(f'O nove apareceu {numeros.count(9)} vezes')

if 3 in numeros:
    indice3 = numeros.index(3)
    print(f'O primeiro número 3 aparece na posição {indice3+1}.')
else:
    print('Não há o número 3 na tupla.')

print('Números pares digitados: ',end='')
for c in numeros:
    if c % 2 == 0:
        print(c,end=' ')
'''



# 76) Crie um programa que tenha uma tupla única com nomes de produtos e seus respectivos preços, na sequência. No final, mostre uma listagem de preços, organizando os dados em forma tabular.
'''
def lin():
    print('-'*40)

produtos = ('Desororante',6.99,'Cotonete',9.99,'Shampoo',15.00,'Condicionador',12.00)

c=0
lin()
while c <len(produtos ):
    print(produtos[c],('-'*(30-len(produtos[c]))), 'R$',produtos[c+1])
    c +=2
lin()
'''



# 77) Crie um programa que tenha uma tupla com várias palavras (não usar acentos). Depois disso, você deve mostrar, para cada palavra, quais são as suas vogais.
'''
palavras = ('Paulo','lindo','gato','maravilhoso','bonito','inteligente')

for c in palavras:
    print(f'\nNa palavra {c} temos ',end = '')
    for letra in c:
        if letra.lower() in 'aeiou':
            print(letra,end=' ')
'''



# 78) Faça um programa que leia 5 valores numéricos e guarde-os em uma lista. No final, mostre qual foi o maior e o menor valor digitado e as suas respectivas posições na lista.   
'''
numeros = []

for c in range(0,5):
    numeros.append(int(input('Digite um valor: ')))

print(f'O maior valor digitado foi {max(numeros)} nas posições: ',end='')
for p,n in enumerate(numeros):
    if n == max(numeros):
        print(f'{p+1}',end=' ')  
print(f'\nO menor valor encontrado foi {min(numeros)} nas posições: ',end='')
for p,n in enumerate(numeros):
    if n == min(numeros):
        print(f'{p+1}',end=' ')  
'''



# 79) Crie um programa onde o usuário possa digitar vários valores numéricos e cadastre-os em uma lista. Caso o número já exista lá dentro, ele não será adicionado. No final, serão exibidos todos os valores únicos digitados, em ordem crescente. 
'''
numeros = []

while True:
    numeros.append(int(input('Digite um número para a lista: ')))
    for n in numeros:
       if numeros.count(n) > 1:
           print('\033[31mNÚMERO DUPLICADO! NÃO SERÁ ADICIONADO!\033[m')
           numeros.remove(n)
    
    
    resp = str(input('Quer continuar ? (S/N)')).strip()[0]
    if resp in 'Nn':
        break
    

print(f'Os números adicionados foram: {numeros}')    
'''



# 80) Crie um programa onde o usuário possa digitar cinco valores numéricos e cadastre-os em uma lista, já na posição correta de inserção (sem usar o sort()). No final, mostre a lista ordenada na tela.
'''
lista = []

for p,c in enumerate(range(0,5)):
    n = int(input('Digite um valor: '))
    if p == 0:
        print('Valor adicionado na posição 0.')
        lista.append(n)
    if p == 1 and n < max(lista):
        print('Valor adicionado na posição 0.')
        lista.insert(0,n)
    if p == 1 and n >= max(lista):
        print('Valor adicionado na posição 1.')
        lista.append(n)
    if p == 2 and n >= max(lista):
         print('Valor adicionado na posição 2.')
         lista.append(n)
    if p == 2 and n < min(lista):   
        print('Valor adicionado na posição 0.')
        lista.insert(0,n)  
    if p == 2 and n > min(lista) and n < max(lista):
        print('Valor adicionado na posição 1.')
        lista.insert(1,n)
    if p == 3 and n >= max(lista):
        print('Valor adicionado na posição 3.')
        lista.append(n)
    if p == 3 and n < min(lista):
        print('Valor adicionado na posição 0.')
        lista.insert(0,n)
    if p == 3 and n > min(lista) and n < max(lista) and n < lista[1]:
        print('Valor adicionado na posição 1.')
        lista.insert(1,n)
    if p == 3 and n > min(lista) and n < max(lista) and n > lista[1]:
        print('Valor adicionado na posição 2.')
        lista.insert(2,n)
    if p == 4 and n >= max(lista):
        print('Valor adicionado na posição 4.')
        lista.append(n)
    if p == 4 and n < min(lista):
        print('Valor adicionado na posição 0.')
        lista.insert(0,n)
    if p == 4 and n > min(lista) and n < max(lista) and n <= lista[1]:  
        print('Valor adicionado na posição 1.')
        lista.insert(1,n)
    if p == 4 and n > min(lista) and n < max(lista) and n > lista[1] and n <= lista[2]:
        print('Valor adicionado na posição 2.')
        lista.insert(2,n)
    if p == 4 and n > min(lista) and n < max(lista) and n > lista[1] and n > lista[2] and n <= lista[3]:
        print('Valor adicionado na posição 3.')
        lista.insert(3,n)


print(f'Os números digitados foram: {lista}')    
'''



# 81) Crie um programa que vai ler vários números e colocar em uma lista.                  Depois disso, mostre:                                                                                                                                                A) Quantos números foram digitados.                                                                                                                    B) A lista de valores, ordenada de forma decrescente.                                                                                          C) Se o valor 5 foi digitado e está ou não na lista.
#Depois disso, mostre:       
# A) Quantos números foram digitados.                                                                                                                   
# B) A lista de valores, ordenada de forma decrescente.     
# C) Se o valor 5 foi digitado e está ou não na lista.   
'''
lista = []

c=0
while True:
    lista.append(int(input('Digite um valor: ')))
    resp = str(input('Quer continuar ? (S/N)')).strip()[0]

    if resp in 'Nn':
        break
                                                               

print(f'Foram digitados {len(lista)} números.')

lista.sort(reverse = True)
print(f'A lista em forma decrescente é {lista}')

if 5 in lista:
    print('O valor 5 está na lista.')
else:
    print('O valor 5 não está na lista.')   
'''



# 82) Crie um programa que vai ler vários números e colocar em uma lista. Depois disso, crie duas listas extras que vão conter apenas os valores pares e os valores ímpares digitados, respectivamente. Ao final, mostre o conteúdo das três listas geradas.
'''
lista = []
pares = []
impares = []

while True: 
    lista.append(int(input('Digite um valor: ')))
    resp = str(input('Quer continuar ? (S/N)')).strip()[0]
    
    if resp in 'Nn':
            break
   


for c in lista:
        if c%2 == 0:
            pares.append(c)
        else:
            impares.append(c)  


print(f'A lista digitada foi {lista}')
print(f'Os números pares foram {pares}')
print(f'Os números ímpares foram {impares}')
'''



# 83) Crie um programa onde o usuário digite uma expressão qualquer que use parênteses. Seu aplicativo deverá analisar se a expressão passada está com os parênteses abertos e fechados na ordem correta.
'''
exp = str(input('Digite a expressão: ')).strip()

aberto =  exp.count('(')
fechado = exp.count(')')

if aberto == fechado:
    print('\033[32mA expressão está correta!\033[m')
if aberto != fechado or exp[0] = ')' or exp[-1] = '(':
    print('\033[31mA EXPRESSÃO ESTÁ INCORRETA\033[m')    
'''



# 84) Faça um programa que leia nome e peso de várias pessoas, guardando tudo em uma lista. No final, mostre:   
# A) Quantas pessoas foram cadastradas.
# B) Uma listagem com as pessoas mais pesadas. 
# C) C) Uma listagem com as pessoas mais leves.
'''
pessoas = []
individuo = []

maior=menor=0
while True:
    pessoas.append(str(input('Digite o nome da pessoa: ')))
    pessoas.append(int(input('Digite o peso em kg: ')))
 
    individuo.append(pessoas[:])
    pessoas.clear()
 
    resp = str(input('Quer continuar ? (S/N)')).strip()[0]

    if resp in 'Nn':
        break
 

for p,c in enumerate(individuo):
    if p == 0:
        maior=menor=c[1]
    else:
        if c[1] >= maior:
            maior = c[1]
        if c[1] <= menor:
            menor= c[1]        




print(f'Foram cadastradas {len(individuo)} pessoas.')
print(f'O maior peso foi {maior}kg e é das pessoas: ',end='')
for c in individuo:
    if c[1] == maior:
        print(c[0],end=' ')
print(F'\nO menor peso foi {menor}kg e é das pessoas: ',end='')
for c in individuo:
    if c[1] == menor:
        print(c[0],end=' ')
'''



# 85) Crie um programa onde o usuário possa digitar sete valores numéricos e cadastre-os em uma lista única que mantenha separados os valores pares e ímpares. No final, mostre os valores pares e ímpares em ordem crescente.
'''
lista = [[],[]]

for c in range(0,7):
    n = int(input('Digite um valor: '))
    if n%2 == 0:
      lista[0].append(n)
    else:
       lista[1].append(n)

lista[0].sort()
lista[1].sort()

print(f'Os valores pares em ordem crescente são: {lista[0]}')
print(f'Os valores ímpares em ordem crescente são: {lista[1]}')
'''



# 86) Crie um programa que declare uma matriz de dimensão 3×3 e preencha com valores lidos pelo teclado. No final, mostre a matriz na tela, com a formatação correta.
'''
lista = []

for x in range(0,3):
    n = int(input(f'Insira o valor {[0],[x]}: '))
    lista.append(n)

for x in range(0,3):
    n = int(input(f'Insira o valor {[1],[x]}: '))
    lista.append(n)

for x in range(0,3):
    n = int(input(f'Insira o valor {[2],[x]}: '))
    lista.append(n)

print('Matriz formada: ')

print(f'[{lista[0]:^5}] [{lista[1]:^5}] [{lista[2]:^5}]')    
print(f'[{lista[3]:^5}] [{lista[4]:^5}] [{lista[5]:^5}]')
print(f'[{lista[6]:^5}] [{lista[7]:^5}] [{lista[8]:^5}]')
'''






# 87) Aprimore o desafio anterior, mostrando no final:  
# a) A soma de todos os valores pares digitados.
# b) A soma dos valores da terceira coluna.
# c) O maior valor da segunda linha.
'''
lista = []
par=[]
terceiracoluna = []
maiorvalor = 0

for x in range(0,3):
    n = int(input(f'Insira o valor {[0],[x]}: '))
    lista.append(n)

for x in range(0,3):
    n = int(input(f'Insira o valor {[1],[x]}: '))
    lista.append(n)

for x in range(0,3):
    n = int(input(f'Insira o valor {[2],[x]}: '))
    lista.append(n)

print('Matriz formada: ')

print(f'[{lista[0]:^5}] [{lista[1]:^5}] [{lista[2]:^5}]')    
print(f'[{lista[3]:^5}] [{lista[4]:^5}] [{lista[5]:^5}]')
print(f'[{lista[6]:^5}] [{lista[7]:^5}] [{lista[8]:^5}]')

for c in lista:
    if c%2 == 0:
        par.append(c)


for p,c in enumerate(lista):
    if p == 2 or p == 5 or  p == 8:
        terceiracoluna.append(c)


for p,c in enumerate(lista):
    if p == 3:
        maiorvalor = c
    else:
        if c > maiorvalor:
            maiorvalor = c
    if p == 5:
        break             

print(f'A soma dos valores pares é {sum(par)}')
print(f'A soma dos elementos da terceira coluna é {sum(terceiracoluna)}')
print(f'O maior valor da segunda linha é {maiorvalor}')
'''



# 88) Faça um programa que ajude um jogador da MEGA SENA a criar palpites.O programa vai perguntar quantos jogos serão gerados e vai sortear 6 números entre 1 e 60 para cada jogo, cadastrando tudo em uma lista composta.
'''
from random import randint
from time import sleep

lista = list()
jogos = list()
print('-'*18)
print('JOGO DA MEGA-SENA')
print('-'*18)
quant = int(input('Quantos jogos quer que eu sorteie ? '))
tot = 1  
while tot <= quant: 
    cont = 0
    while True:
        num = randint(1,60)
        if num not in lista:
            lista.append(num)
            cont +=1
        if cont >= 6:
            break    
    lista.sort()
    jogos.append(lista[:])
    lista.clear()
    tot +=1

print(F'SORTEANDO {quant} JOGOS: ')
for p,c in enumerate(jogos):
    print(f'Jogo {p+1}: {c}')
    sleep(0.5)
'''



# 89) Crie um programa que leia nome e duas notas de vários alunos e guarde tudo em uma lista composta. No final, mostre um boletim contendo a média de cada um e permita que o usuário possa mostrar as notas de cada aluno individualmente.
'''
def l():
    print('-'*30)
 

aluno = list()
lista = list()

while True:
    nome = str(input('Digite o nome do aluno: '))
    n1 = float(input('Digite a primeira nota: '))
    n2 = float(input('Digite a segunda nota: '))
    resp = str(input('Quer continuar ? ')).strip()[0]
    l()
 
    aluno.append(nome)
    aluno.append(n1)
    aluno.append(n2)
    lista.append(aluno[:])
    aluno.clear()

    if resp in 'Nn':
        break


print('  NOME           MÉDIA')
l()

for p,c in enumerate(lista):
    print(f'{p} {c[0]}  {(" " * (10-len(c[0])))}   {((c[1]+c[2])/2)}')


    
while True:
    ver = int(input('De qual aluno gostaria de ver as notas ? (999 para parar): ')) 
    
    if ver == 999:
        break    

    print(F'As notas do(a) aluno(a) {lista[ver][0]} foram {lista[ver][1]} e {lista[ver][2]}')
    l()    


print('VOLTE SEMPRE')    
'''



# 90) Faça um programa que leia nome e média de um aluno, guardando também a situação em um dicionário. No final, mostre o conteúdo da estrutura na tela.
'''
aluno = {'nome': str(input('Digite o nome do aluno: ')), 'media': float(input('Digite a média do aluno: '))}

print(f'Nome:  {aluno["nome"]}')
print(f'Média: {aluno["media"]}')

if 5 <= aluno['media'] < 7:
    aluno['situação'] = 'RECUPERAÇÃO'
if aluno['media'] < 5:
    aluno['situação'] = 'REPROVADO'
if aluno['media'] >= 7 :
    aluno['situação'] = 'APROVADO'

print(f'A situação do aluno é {aluno["situação"]}')       
'''



# 91) Crie um programa onde 4 jogadores joguem um dado e tenham resultados aleatórios. Guarde esses resultados em um dicionário em Python. No final, coloque esse dicionário em ordem, sabendo que o vencedor tirou o maior número no dado.

def l():
    print('-'*45)
    """
    :Exibe 45 linhas na tela.   
    """
    
'''
from random import randint
from time import sleep

dado = {}

dado['jogador1'] = randint(1,6)
dado['jogador2'] = randint(1,6)
dado['jogador3'] = randint(1,6)
dado['jogador4'] = randint(1,6)

print(f'O jogador 1 tirou {dado["jogador1"]}')
sleep(1)
print(f'O jogador 2 tirou {dado["jogador2"]}')
sleep(1)
print(f'O jogador 3 tirou {dado["jogador3"]}')
sleep(1)
print(f'O jogador 4 tirou {dado["jogador4"]}')
l()
print('---RANKING DOS VENCEDORES---')


c=1
for k in sorted(dado, key=dado.get,reverse=True):
    print(f'{c}º lugar: {k} com {dado[k]}')
    c+=1
'''



# 92) Crie um programa que leia nome, ano de nascimento e carteira de trabalho e cadastre-o (com idade) em um dicionário. Se por acaso a CTPS for diferente de ZERO, o dicionário receberá também o ano de contratação e o salário. Calcule e acrescente, além da idade, com quantos anos a pessoa vai se aposentar.
'''
from datetime import datetime

dados = {'nome': str(input('Digite o nome: ')),
         'ano': int(input('Digite o ano de nascimento: ')),
         'carteira' : int(input('Digite a carteira de trabalho (0 não tem): '))}

if dados['carteira'] != 0:
    dados['anotecontrat'] = int(input('Digite o ano de contratação: '))
    dados['sal'] = float(input('Digite o salário: R$'))
    
    l()
    print(f'Nome: {dados["nome"]}')
    print(f'Idade: {(datetime.now().year)-dados["ano"]}')
    print(f'CTPS: {dados["carteira"]}')
    print(f'Ano de contratação: {dados["anotecontrat"]}')
    print(f'Salário: R${dados["sal"]}')
    print(f'Aposentadoria: {((dados["anotecontrat"]) + 35)-dados["ano"]}','anos')


else:
    l()
    print(f'Nome: {dados["nome"]}')
    print(f'Idade: {2023-dados["ano"]}')
    print(f'CTPS: {dados["carteira"]}')
'''



# 93) Crie um programa que gerencie o aproveitamento de um jogador de futebol. O programa vai ler o nome do jogador e quantas partidas ele jogou. Depois vai ler a quantidade de gols feitos em cada partida. No final, tudo isso será guardado em um dicionário, incluindo o total de gols feitos durante o campeonato.
'''
info = {'nome' : str(input('Qual é o nome do jogador ? '))}

partidas = int(input('Quantas partidas ele jogou ? '))

listagol = list()

tot = 0
for c in range(0,partidas):
    gols = int(input((f'  Quantos gols na partida {c+1} ? ')))
    tot += gols
    listagol.append(gols)

info['gols'] = listagol
info['total'] = tot

l()
print(info)
l()
print(f'O campo nome tem o valor {info["nome"]}')
print(f'O campo gols tem o valor {info["gols"]}')
print(f'O campo total tem o valor {info["total"]}')
l()
print(F'O jogador {info["nome"]} jogou {partidas} partidas: ')

for c in range(0,partidas):
    print(F' => Na partida {c+1} ele fez {listagol[c]} gols')
'''




# 94) Crie um programa que leia nome, sexo e idade de várias pessoas, guardando os dados de cada pessoa em um dicionário e todos os dicionários em uma lista. No final, mostre: A) Quantas pessoas foram cadastradas B) A média de idade C) Uma lista com as mulheres D) Uma lista de pessoas com idade acima da média
'''
lista = list()
pessoa = {}
soma=media=0

while True:   
    pessoa.clear()
    pessoa['nome'] = str(input('Digite o nome da pessoa: '))
    while True:   
        pessoa['sexo'] = str(input('Digite o sexo (M/F): ')).upper()[0] 
        if pessoa['sexo'] in 'MmFf':
            break
        print('\033[31mERRO!\033[m Insira apenas M ou F.')

    pessoa['idade'] = int(input('Digite a idade: '))
    soma += pessoa['idade']
    lista.append(pessoa.copy())
    while True:
        resp = str(input('Quer continuar ? (S/N): ')).upper()[0]
        if resp in 'SsNn':
          break
        print('\033[31mERRO!\033[m INSIRA APENAS S OU N.')

    if resp == 'N':
        break
l()   
print(f'Ao todo, {len(lista)} pessoas foram cadastradas.')
print(f'A média das idades é {(soma)/len(lista):.2f}')
print(F'As mulheres são: ',end='')

for c in lista:
    if c['sexo'] in 'Ff':
        print(c['nome'], end='  ')
print()
print('As pessoas com a idade acima da média são: ',end='')
for c in lista:
    if c['idade'] >= (soma)/len(lista):
        print(c['nome'],end=' ')
'''



# 95) Aprimore o desafio 93 para que ele funcione com vários jogadores, incluindo um sistema de visualização de detalhes do aproveitamento de cada jogador.
'''
lista = list()

while True:  
    info = {'nome' : str(input('Qual é o nome do jogador ? '))}

    partidas = int(input('Quantas partidas ele jogou ? '))

    listagol = list()

    tot = 0
    for c in range(0,partidas):
        gols = int(input((f'  Quantos gols na partida {c+1} ? ')))
        tot += gols
        listagol.append(gols)

    info['gols'] = listagol
    info['total'] = tot
    lista.append(info.copy())
    resp = str(input('Quer continuar (S/N) ? ')).upper()[0]
    if resp == 'N':
        break

l()
print(f'{"cod."} {"Nome"}       {"Gols":^}         {" Total":>5}')
l()
for p,c in enumerate(lista):
    print(f' {p}  {c["nome"]:<}     {c["gols"]}    {c["total"]:>5}')
l()
while True:
    ver = int(input('Ver dados de qual jogador ? (999 para parar): '))
    
    if ver == 999:
        break
    if ver >= len(lista):
        print('\033[31mERRO!\033[m DIGITE UM VALOR VÁLIDO' )
    else:
        print(f'--Levantamento do jogador {lista[ver]["nome"]}: ')
        for i,g in enumerate(lista[ver]['gols']):
           print(f'Na partida {i} ele fez {g} gols' )
'''
        



# 96) Faça um ´programa com uma função chamada "área()" que receba as dimensões de um terreno retangular 
# (largura e comprimento) e mostre a área dele.
'''
def area(x,y):
    a = x*y
    return a

l = int(input('Insira a largura do terreno: '))
c = int(input('Insira o comprimento do terreno: '))


resp = area(l,c)  
print('A área, em m2, é',resp)
'''




# 97) Faça um ´programa com uma função chamada "escreva()" que receba um texto qualquer como parâmetro e mostre uma mensagem com tamanho adaptável.
'''
def escreva(txt):
    print('-' * (len(txt) ))
    print(txt)
    print('-' * (len(txt)))


escreva('Olá mundo!')
escreva('Mensagem adaptável')
escreva('Paulo é zika!')
'''



# 98) Faça um programa que tenha uma função chamada contador(), que receba três parâmetros: início, fim e passo. Seu programa tem que realizar três contagens através da função criada:                                                                                                                                                                         
#  a) de 1 até 10, de 1 em 1                                                                                                                                         
#  b) de 10 até 0, de 2 em 2                                                                                     
#  c) uma contagem personalizada

from time import sleep

def contador(i,f,p):
    
     if i > f and p > 0:
        p = -p
    
     if p == 0 and i < f:
        p=1
   
     if p == 0 and i > f:
        p = -1
  
     if i < f:
        f = f+1
        print(f'\nContagem de {i} até {f-1} de {abs(p)} em {abs(p)}: ')
     else:
        f = f-1    
        print(f'\nContagem de {i} até {f+1} de {abs(p)} em {abs(p)}: ')

     for c in range(i,f,p):
          print(c,end=' ')
          sleep(0.5)

contador(1,10,1)     
contador(10,0,2) 
print('\nAgora é sua vez! Insira o ínicio, fim e passo da contagem.')
i = int(input('Início: '))
f = int(input('Fim: '))
p = int(input('Passo: '))
contador(i,f,p)




# 99) Faça um programa que tenha uma função chamada maior(), que receba vários parâmetros com valores inteiros. Seu programa tem que analisar todos os valores e dizer qual deles é o maior.
'''
def maior(*n):
       print(f'Os números fornecidos foram: {n}')
       
       if len(n) == 0:
            print('Foram informados 0 valores. O maior não existe.')
            l()
       else:
        for p,c in enumerate(n):
                if p == 0:
                    maiorvalor = c
                else:
                 if c > maiorvalor:
                    maiorvalor = c
        print(f'Foram {len(n)} números ao total e o maior é {maiorvalor}')
        l()
maior()    
maior(0,3,5)
maior(0,5,3,4,32,5,3,4,43,3)
'''



# 100) Faça um programa que tenha uma lista chamada números e duas funções chamadas sorteia() e somaPar(). A primeira função vai sortear 5 números e vai colocá-los dentro da lista e a segunda função vai mostrar a soma entre todos os valores pares sorteados pela função anterior.
'''
from random import randint
from time import sleep

lista = list()
pares = list()

def sorteia():
    print('Sorteando 5 números: ',end='')
    for c in range(0,5):
      n =  randint(0,10)
      print(n,end=' ')
      sleep(0.5)
      lista.append(n)
    
 
def somaPar(lista):
   for c in lista:
      if c%2 == 0:
         pares.append(c) 
   print(f'\nSomando os valores pares de {lista} temos {sum(pares)}')      


sorteia()
somaPar(lista)   
'''



# 101) Crie um programa que tenha uma função chamada voto() que vai receber como parâmetro o ano de nascimento de uma pessoa, retornando um valor literal indicando se uma pessoa tem voto NEGADO, OPCIONAL e OBRIGATÓRIO nas eleições.
'''
def voto(ano):
    from datetime import datetime
    sit = (datetime.now().year) - ano
    
    if sit  < 15:
         return (f'Situação com {sit} anos: VOTO PROIBIDO!')
    elif sit == 16 or sit == 17 or sit >= 70:
        return (f'Situação com {sit} anos: VOTO FACULTATIVO!')  
    else:
      return (F'Situação com {sit} anos: VOTO OBRIGATÓRIO!')
    

ano = int(input('Digite o ano: '))
print(voto(ano))
'''

    




# 102) Crie um programa que tenha uma função fatorial() que receba dois parâmetros: o primeiro que indique o número a calcular e outro chamado show, que será um valor lógico (opcional) indicando se será mostrado ou não na tela o processo de cálculo do fatorial.
'''
def fatorial(c,show = False):
    """
    A função calcula o fatorial de um número.
    c: Número a ter o fatorial calculado;
    show: Se o processo de cálculo será mostrado.
    """
    f=1
    while c > 0:
        f = f *c
        if show == True:
            print(f'{c} x' if c > 1 else f'{c} =',end=' ')
        c = c-1
    return f


help(fatorial)
'''



# 103) Faça um programa que tenha uma função chamada ficha(), que receba dois parâmetros opcionais: o nome de um jogador e quantos gols ele marcou. O programa deverá ser capaz de mostrar a ficha do jogador, mesmo que algum dado não tenha sido informado corretamente.
'''
def ficha(jog = '<desconhecido>',gols = 0):
    return f'O jogador {jog} fez {gols} gol(s) no campeonato'

nome = str(input('Digite o nome do jogador: ')).strip()
gol = (input('Digite a quantidade de gols feitos: ')).strip()

if gol.isnumeric():
    gol = int(gol)
else:
    gol = 0
    
if nome == '':
    print(ficha(gols=gol))
else:
    print(ficha(nome,gol))    
'''



# 104) Crie um programa que tenha a função leiaInt(), que vai funcionar de forma semelhante ‘a função input() do Python, só que fazendo a validação para aceitar apenas um valor numérico. Ex: n = leiaInt(‘Digite um n: ‘)
'''
def leiaInt():
    while True:
        n = input('Digite um número: ')
        if n.isnumeric():
            print(f'O número digitado foi {n}',)
            break
        print('\033[31mERRO! DIGITE UM NÚMERO VÁLIDO\033[m')
              

leiaInt()       
'''



# 105) Faça um programa que tenha uma função notas() que pode receber várias notas de alunos e vai retornar um dicionário com as seguintes informações:
# – Quantidade de notas                                                                                                                                                  
# – A maior nota                                                                                                                                                               
# – A menor nota                                                                                                                                                         
# – A média da turma                                                                                                                                                    
# – A situação (opcional)

'''
def notas(*n,sit = False):
    """
    -> A função recebe 2 parâmetros:   
    n: recebe as notas
    sit: recebe a situação 
    return: retorna o dicionário com as informações  
    """   
    resultado = dict()
    resultado['Total de notas'] = len(n)
    resultado['Maior nota'] = max(n)
    resultado['Menor nota'] = min(n)   
    resultado['Média'] = (sum(n))/len(n) 
    
    if sit == True:
        if resultado["Média"] < 5:
            resultado['Situação'] = 'Ruim'
        if 5 < resultado['Média'] <= 6:
            resultado['Situação'] = 'Razoável'
        if resultado['Média'] > 6:
            resultado['Situação'] = 'Boa'    

    return resultado
help(notas)
'''



# 106) Faça um mini-sistema que utilize o Interactive Help do Python. O usuário vai digitar o comando e o manual vai aparecer. Quando o usuário digitar a palavra ‘FIM’, o programa se encerrará. Importante: use cores.
'''
while True:
   
   l()
   print('\033[43mSISTEMA DE AJUDA\033[m')
   l()
   
   from time import sleep
   func = str(input('Digite a função: '))
   
   if func.upper() == 'FIM':
       break

   print(f'\033[44mAcessando o manual do {func}...\033[m')
   sleep(1)
   print('\033[43m',end='')
   help(func)
   print('\033[m')
   print()
print('\033[46mVOLTE SEMPRE!\033[m')
'''



# 107) Crie um módulo chamado moeda.py que tenha as funções incorporadas aumentar(), diminuir(), dobro() e metade(). Faça também um programa que importe esse módulo e use algumas dessas funções.
'''
import moeda

n = int(input('Digite um valor: R$'))
print(f'A metade de {n} é {moeda.metade(n)}')
print(f'O dobro de {n} é {moeda.dobro(n)}')
print(f'Aumentando {n} em 10% teremos {moeda.aumentar(n)}')
print(f'Reduzindo {n} em 10% teremos {moeda.diminuir(n)}')
'''



# 108)  Adapte o código do desafio #107, criando uma função adicional chamada moeda() que consiga mostrar os números como um valor monetário formatado.
'''
import moeda

n = float(input('Digite um valor: R$'))
print(f'A metade de {moeda.moeda(n)} é {moeda.moeda(moeda.metade(n))}')
print(f'O dobro de {moeda.moeda(n)} é {moeda.moeda(moeda.dobro(n))}')
print(f'Aumentando {moeda.moeda(n)} em 10% teremos {moeda.moeda(moeda.aumentar(n))}')
print(f'Reduzindo {moeda.moeda(n)} em 10% teremos {moeda.moeda(moeda.diminuir(n))}')
'''



# 109) Modifique as funções que form criadas no desafio 107 para que elas aceitem um parâmetro a mais, informando se o valor retornado por elas vai ser ou não formatado pela função moeda(), desenvolvida no desafio 108.
'''
import moeda

n = float(input('Digite um valor: R$'))
print(f'A metade de {moeda.moeda(n)} é {(moeda.metade(n,False))}')
print(f'O dobro de {moeda.moeda(n)} é {(moeda.dobro(n,False))}')
print(f'Aumentando {moeda.moeda(n)} em 10% teremos {(moeda.aumentar(n))}')
print(f'Reduzindo {moeda.moeda(n)} em 10% teremos {(moeda.diminuir(n))}')
'''



# 110) Adicione o módulo moeda.py criado nos desafios anteriores, uma função chamada resumo(), que mostre na tela algumas informações geradas pelas funções que já temos no módulo criado até aqui.
'''
from moeda import resumo
n = float(input('Digite um valor: R$'))
resumo(n)
'''


# 111) Crie um pacote chamado utilidadesCeV que tenha dois módulos internos chamados moeda e dado. Transfira todas as funções utilizadas nos desafios 107, 108 e 109 para o primeiro pacote e mantenha tudo funcionando.



# 112) Dentro do pacote utilidadesCeV que criamos no desafio 111, temos um módulo chamado dado. Crie uma função chamada leiaDinheiro() que seja capaz de funcionar como a função imputa(), mas com uma validação de dados para aceitar apenas valores que seja monetários.
'''
from moeda import resumo
from moeda import leiaDinheiro
n=leiaDinheiro('Digite um valor: R$')
resumo(n)
'''


# 113) Reescreva a função leiaInt() que fizemos no desafio 104, incluindo agora a possibilidade da digitação de um número de tipo inválido. Aproveite e crie também uma função leiaFloat() com a mesma funcionalidade.

def leiaInt():
    while True:
        try:
            n = int(input('Digite a idade: '))
        except:
            print('\033[31mERRO! DIGITE UM INTEIRO VÁLIDO\033[m')
            continue   
        else:
             return n          
'''
def leiaFloat():
        while True:
            try:
                n = float(input('Digite um número real: '))
            except:
                print('\033[31mERRO! INSIRA UM NÚMERO REAL VÁLIDO\033[m')
                continue
            else:
                return n


n = leiaInt()
s = leiaFloat()
print(f'O número inteiro digitado foi {n} e o real foi {s}') 
'''


# 114) Crie um código em Python que teste se o site pudim está acessível pelo computador usado.
'''
import urllib.request

try:
    site  = urllib.request.urlopen('http://pudim.com.br/')
except:
    print('\033[31mO site do pudim não está acessível.\033[m')
else:
    print('\033[32mSITE DO PUDIM ACESSADO COM SUCESSO.\033[m')    
'''



# 115) Vamos criar um sistema em Python, usando modularização.
'''
from Cores import cores
from time import sleep


from arquivo import *

arq = 'pessoas.txt'
if arquivoExiste(arq):
     print(f'{cores["verde"]}ARQUIVO ENCONTRADO!{cores["encerracor"]}')
else:
     print(f'{cores["vermelho"]}ARQUIVO NÃO ENCONTRADO!{cores["encerracor"]}')  
     criarArquivo(arq)   
     

while True:
    try:


                titulo = 'MENU PRINCIPAL'
                lista = ['Opção 1','NOVO CADASTRO','Saindo do sistema... Até logo!']

                l()
                print(titulo.center(43))
                l()
                print(f'{cores["amarelo"]}1 - {cores["encerracor"]}'+ f'{cores["azul"]}Ver pessoas cadatradas{cores["encerracor"]}')
                print(f'{cores["amarelo"]}2 - {cores["encerracor"]}' + f'{cores["azul"]}Cadastrar nova pessoa{cores["encerracor"]}')
                print(f'{cores["amarelo"]}3 - {cores["encerracor"]}' + f'{cores["azul"]}Sair do sistema {cores["encerracor"]}')   
                l()
                n = int(input('Sua opção: '))
                
                if n == 1:
                    lerArquivo(arq)
                    sleep(2)
                    continue

                if n == 2:
                    l()
                    print(lista[(n-1)].center(43))
                    l()  
                    nome = str(input('Nome: '))
                    idade = leiaInt()
                    cadastrar(arq,nome,idade)

                if n == 3:
                    l()
                    print(lista[(n-1)].center(43))
                    l()  
                    break
                
                if n <= 0:
                   l()
                   print(f'{cores["vermelho"]}Valor inválido, informe 1, 2 ou 3{cores["encerracor"]}')
                   l()
                   sleep(2)
                   continue  


    except ValueError:
        print(f'{cores["vermelho"]}Valor inválido, informe 1, 2 ou 3{cores["encerracor"]}')
        sleep(2)
        continue

    except IndexError:
        print(f'{cores["vermelho"]}Valor inválido, informe 1, 2 ou 3{cores["encerracor"]}')
        sleep(2)
        continue
'''
